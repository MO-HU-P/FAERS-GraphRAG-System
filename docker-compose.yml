version: '3.8'

services:
  neo4j:
    container_name: neo4j
    image: neo4j:5.20.0
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/plugins:/plugins
      - ./neo4j/logs:/logs
      - ./neo4j/import:/import
      - ./neo4j/init:/init
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_whitelist=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_listen__address=:7687
      - NEO4J_dbms_connector_http_listen__address=:7474
      - NEO4J_dbms_connector_bolt_advertised__address=:7687
      - NEO4J_dbms_connector_http_advertised__address=:7474
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - EXTENSION_SCRIPT=/tmp/background.sh
    healthcheck:
      test: ["CMD", "neo4j", "status", "--verbose"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 60s
    restart: on-failure
    networks:
      - net

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    image: ollama
    container_name: ollama
    entrypoint: /tmp/run_ollama.sh
    ports:
      - 11434:11434
    volumes:
      - .:/app/
      - ./ollama/ollama:/root/.ollama
    tty: true
    restart: always
    networks:
      - net  

  embedding-pipeline:
    build:
      context: ./embedding_pipeline
      dockerfile: Dockerfile
      args:
        - NEO4J_URL=${NEO4J_URL}
        - NEO4J_USERNAME=${NEO4J_USERNAME}
        - NEO4J_PASSWORD=${NEO4J_PASSWORD}
        - OLLAMA_URL=http://ollama:11434
    environment:
      - NEO4J_URL=${NEO4J_URL}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      neo4j:
        condition: service_healthy
      ollama:
        condition: service_started
    volumes:
      - ./embedding_pipeline:/app
    networks:
      - net
    tty: true
    stdin_open: true

  streamlit-ui:
    build:
      context: ./streamlit_ui
      dockerfile: Dockerfile
      args:
        - NEO4J_URL=${NEO4J_URL}
        - NEO4J_USERNAME=${NEO4J_USERNAME}
        - NEO4J_PASSWORD=${NEO4J_PASSWORD}
        - OPENAI_API_KEY=${OPENAI_API_KEY}
        - OLLAMA_URL=http://ollama:11434
    environment:
      - NEO4J_URL=${NEO4J_URL}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OLLAMA_URL=http://ollama:11434
    ports:
      - "8501:8501"
    depends_on:
      embedding-pipeline:
        condition: service_started
    entrypoint: ["sh", "-c", "while ! nc -z neo4j 7687; do sleep 1; done; streamlit run main.py"]
    networks:
      - net

volumes:
  ollama:
networks:
  net:
